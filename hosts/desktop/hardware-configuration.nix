# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  system,
  modulesPath,
  user,
  ...
}:
  let
    uid = config.users.users.${user}.uid;
  in
{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.kernelPackages = pkgs.linuxPackages_latest;

  boot.initrd.availableKernelModules = [
    "nvme"
    "xhci_pci"
    "ahci"
    "usb_storage"
    "usbhid"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [];
  boot.kernelModules = [];
  boot.extraModulePackages = [];
  boot.kernelParams = [
    "pcie_port_pm=off"
    "pcie_aspm=1"
    "pcie_aspm.policy=performance"
    "amdgpu_aspm=1"
  ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/e5d09b5f-69ee-4bca-8822-c2022d724715";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/A844-423C";
    fsType = "vfat";
  };

  fileSystems."/media/${user}/ssd" = {
    device = "/dev/disk/by-uuid/3CE4C1E5E4C1A20E";
    fsType = "ntfs-3g";
    options = [ "rw" "uid=${toString uid}" ];
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s8.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault system;
}
